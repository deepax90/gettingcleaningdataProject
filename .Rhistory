a <- available.packages()
head(rownames(a),3)
head(rownames(a),30)
exit
q()
add2 <- function(x,y)  {
x + y
}
add2(3,5)
source('~/.active-rstudio-document')
above <- function(x, n)  {
use <- x > n
x[use]
}
x <- 1:20
above(x)
above(x,12)
above <- function(x, n = 10)  {
use <- x > n
x[use]
}
above(x)
above(x,12)
columnmean <- function(y)  {
## y = Dataframe
nc <- ncol(y) ##Number of colummn
means <- numeric(nc)
for (i in 1:nc)  {
means[i] <- mean(y[,i])
}
means
}
colummnmean(airquality)
?invisible
?ls
ls
debug(ls)
ls
debug(ls)
ls
ls
ls
debug(ls)
a
exit
ls
debug(ls)
ls
ls
library(datasets)
data(iris)
?iris
tapply(iris$Sepal.Length, iris$Species, mean)
colMeans(iris)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
t = tapply(mtcars$hp, mtcars$cyl, mean)
t[1] - t[3]
debug(ls)
ls
?debug
exit
a
if(!file.exists("exdata-data-household_power_consumption.zip")) {
temp <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp)
file <- unzip(temp)
unlink(temp) ## delete the temporary file
}
power <- read.table(file, header=T, sep=";", stringsAsFactors=FALSE)
if(!file.exists("exdata-data-household_power_consumption.zip")) {
temp <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip",temp)
file <- unzip(temp)
unlink(temp) ## delete the temporary file
}
power <- read.table(file, header=T, sep=";", stringsAsFactors=FALSE)
dataSet <- power[power$Date %in% c("1/2/2007","2/2/2007") ,]
globalActivePower <- as.numeric(as.character(dataSet$Global_active_power))
#Plot the graph
png("plot21.png", width=480, height=480)
hist(globalActivePower, col="red", main="Global Active Power", xlab="Global Active Power (kilowatts)")
dev.off()
dataSet <- power[power$Date %in% c("1/2/2007","2/2/2007") ,]
globalActivePower <- as.numeric(as.character(dataSet$Global_active_power))
datetime <- strptime(paste(dataSet$Date, dataSet$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
#Plot the graph
png("plot2.png", width=480, height=480)
plot(datetime, globalActivePower, type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
power <- read.table(file, header=T, sep=";", stringsAsFactors=FALSE)
dataSet <- power[power$Date %in% c("1/2/2007","2/2/2007") ,]
globalActivePower <- as.numeric(as.character(dataSet$Global_active_power))
datetime <- strptime(paste(dataSet$Date, dataSet$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
Sub_metering_1 <- as.numeric(as.character(dataSet$Sub_metering_1))
Sub_metering_2 <- as.numeric(as.character(dataSet$Sub_metering_2))
Sub_metering_3 <- as.numeric(as.character(dataSet$Sub_metering_3))
#Plot the graph
png("plot3.png", width=480, height=480)
plot(datetime, Sub_metering_1, type="l", ylab="Energy sub metering", xlab="")
lines(datetime, Sub_metering_2, type="l", col="red")
lines(datetime, Sub_metering_3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=1, lwd=2.5, col=c("black", "red", "blue"))
dev.off()
dataSet <- power[power$Date %in% c("1/2/2007","2/2/2007") ,]
globalActivePower <- as.numeric(as.character(dataSet$Global_active_power))
datetime <- strptime(paste(dataSet$Date, dataSet$Time, sep=" "), "%d/%m/%Y %H:%M:%S")
globalReactivePower <- as.numeric(as.character(dataSet$Global_reactive_power))
Voltage <- as.numeric(as.character(dataSet$Voltage))
Sub_metering_1 <- as.numeric(as.character(dataSet$Sub_metering_1))
Sub_metering_2 <- as.numeric(as.character(dataSet$Sub_metering_2))
Sub_metering_3 <- as.numeric(as.character(dataSet$Sub_metering_3))
# Plot the graph
png("plot4.png", width=480, height=480)
par(mfrow = c(2, 2))
# PLOT 1
plot(datetime, globalActivePower, type="l", xlab="", ylab="Global Active Power", cex=0.2)
# PLOT 2
plot(datetime, Voltage, type="l", xlab="datetime", ylab="Voltage")
# PLOT 3
plot(datetime, Sub_metering_1, type="l", ylab="Energy sub metering", xlab="")
lines(datetime, Sub_metering_2, type="l", col="red")
lines(datetime, Sub_metering_3, type="l", col="blue")
legend("topright", c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"), lty=, lwd=2.5, col=c("black", "red", "blue"), bty="o")
# PLOT 4
plot(datetime, globalReactivePower, type="l", xlab="datetime", ylab="Global_reactive_power")
dev.off()
getwd()
setwd("C:/Users/Deepak/Dropbox/coursera/getcleandata/project/")
setwd("C:/Users/Deepak/Dropbox/coursera/getcleandata/project/gettingcleaningdataProject")
getwd()
setwd("C:/Users/Deepak/Dropbox/coursera/getcleandata/project/gettingcleaningdataProject")
setwd("C:/Users/Deepak/Dropbox/coursera/getcleandata/project/gettingcleaningdataProject/")
getwd()
run_analysis.R
source("run_analysis.R")
source("run_analysis.R")
?read.table
Xmerged <- rbin(read.table("train/X_train.txt"),read.table("test/X_test.txt"))
subjectmerged <- rbin(read.table("train/subject_train.txt"),read.table("test/subject_test.txt"))
Ymerged <- rbin(read.table("train/Y_train.txt"),read.table("test/Y_test.txt"))
Xmerged <- rbind(read.table("train/X_train.txt"),read.table("test/X_test.txt"))
subjectmerged <- rbind(read.table("train/subject_train.txt"),read.table("test/subject_test.txt"))
Ymerged <- rbind(read.table("train/Y_train.txt"),read.table("test/Y_test.txt"))
ls
getwd()
Xmerged <- rbind(read.table("UCI HAR Dataset/train/X_train.txt"),read.table("UCI HAR Dataset/test/X_test.txt"))
Xmerged <- rbind(read.table("UCI HAR Dataset/train/X_train.txt"),read.table("UCI HAR Dataset/test/X_test.txt"))
subjectmerged <- rbind(read.table("UCI HAR Dataset/train/subject_train.txt"),read.table("UCI HAR Dataset/test/subject_test.txt"))
Ymerged <- rbind(read.table("UCI HAR Dataset/train/Y_train.txt"),read.table("UCI HAR Dataset/test/Y_test.txt"))
?grep
features <- read.table("UCI HAR Dataset/features.txt")
View(features)
features <- read.table("UCI HAR Dataset/features.txt")[,2]
extract_features <- grepl("mean|std", features)
extract_features
features <- read.table("UCI HAR Dataset/features.txt")[,2]
index_useful_features <- grep("-mean\\(\\)|-std\\(\\)", features[, 2])
Xmerged <- Xmerged[,index_useful_features]
names(Xmerged) <- features[index_useful_features, 2]
names(Xmerged) <- gsub("\\(|\\)", "", names(Xmerged))
names(Xmerged) <- tolower(names(Xmerged))
features <- read.table("UCI HAR Dataset/features.txt")[,2]
index_useful_features <- grep("-mean\\(\\)|-std\\(\\)", features)
Xmerged <- Xmerged[,index_useful_features]
names(Xmerged) <- features[index_useful_features]
names(Xmerged) <- gsub("\\(|\\)", "", names(Xmerged))
names(Xmerged) <- tolower(names(Xmerged))
View(Xmerged)
Xmerged <- rbind(read.table("UCI HAR Dataset/train/X_train.txt"),read.table("UCI HAR Dataset/test/X_test.txt"))
subjectmerged <- rbind(read.table("UCI HAR Dataset/train/subject_train.txt"),read.table("UCI HAR Dataset/test/subject_test.txt"))
Ymerged <- rbind(read.table("UCI HAR Dataset/train/Y_train.txt"),read.table("UCI HAR Dataset/test/Y_test.txt"))
## #2
features <- read.table("UCI HAR Dataset/features.txt")[,2]
index_useful_features <- grep("-mean\\(\\)|-std\\(\\)", features)
Xmerged <- Xmerged[,index_useful_features]
names(Xmerged) <- features[index_useful_features]
names(Xmerged) <- gsub("\\(|\\)", "", names(Xmerged))
names(Xmerged) <- tolower(names(Xmerged))
activity = read.table("UCI HAR Dataset/activity_labels.txt")
View(activity)
activity = read.table("UCI HAR Dataset/activity_labels.txt")[,2]
activity
activities = gsub("_", "", tolower(as.character(activities)))
activity = gsub("_", "", tolower(as.character(activity)))
activity
activity = read.table("UCI HAR Dataset/activity_labels.txt")[,2]
activity = gsub("_", " ", tolower(as.character(activity)))
activity
?capitalize
?capitalise
library(Hmisc)
install.packages
install.packages("Hmisc")
library(Hmisc)
capitalize(activity)
activity
Ymerged[,1] <- activity[Ymerged[1]]
names(Ymerged) <- "activity"
Ymerged[,1] <- activity[Ymerged[,1]]
names(Ymerged) <- "activity"
View(Ymerged)
names(subjectmerged) <- "subject"
cleanData <- cbind(subjectmerged, Ymerged, Xmerged)
write.table(cleanData, "merged_clean_data.txt")
## Downloading the dataset
if (!file.exists("UCI HAR Dataset"))  {
dataset_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(dataset_url, "UCI HAR Dataset.zip")
unzip("UCI HAR Dataset.zip")
file.remove("UCI HAR Dataset.zip")
}
## 1. Merging the test and train dataset
Xmerged <- rbind(read.table("UCI HAR Dataset/train/X_train.txt"),read.table("UCI HAR Dataset/test/X_test.txt"))
subjectmerged <- rbind(read.table("UCI HAR Dataset/train/subject_train.txt"),read.table("UCI HAR Dataset/test/subject_test.txt"))
Ymerged <- rbind(read.table("UCI HAR Dataset/train/Y_train.txt"),read.table("UCI HAR Dataset/test/Y_test.txt"))
## 2.
features <- read.table("UCI HAR Dataset/features.txt")[,2]
index_useful_features <- grep("-mean\\(\\)|-std\\(\\)", features)
Xmerged <- Xmerged[,index_useful_features]
names(Xmerged) <- features[index_useful_features]
names(Xmerged) <- gsub("\\(|\\)", "", names(Xmerged))
names(Xmerged) <- tolower(names(Xmerged))
## 3. Use descriptive activity names to name the activities in the data set
activity <- read.table("UCI HAR Dataset/activity_labels.txt")[,2]
activity <- gsub("_", "", tolower(as.character(activity)))
library(Hmisc) ## Library to capitalise the first letter
activity <- capitalize(activity) ## Comment out this line if Hmisc package is not installed.
Ymerged[,1] <- activity[Ymerged[,1]]
names(Ymerged) <- "activity"
## 4. Appropriately label the data set with descriptive variable names
names(subjectmerged) <- "subject"
cleanData <- cbind(subjectmerged, Ymerged, Xmerged)
write.table(cleanData, "merged_clean_data.txt")
## 5. From the data set in step 4, create a second, independent tidy data set with the average of each variable for each activity and each subject.
subjects <- unique(subjectmerged)[,1]
lengthSubject <- length(subjects)
lengthActivity <- length(activity)
numberofColumns <- dim(cleanData)[2]
output <- cleanData[1:lengthSubject*lengthActivity,]
rowIndex = 1
for (x in 1:lengthSubject)  {
for (y in 1:lengthActivty)  {
output[rowIndex,1] <- subjects[x]
output[rowIndex,2] <- activity[y]
temp <- cleanData[cleanData$subject==x & cleanData$activity==activity[y],]
output[rowIndex,3:numberofColumns] <- colMeans(temp[,3:numberofColumns])
rowIndex = rowIndex + 1
}
}
write.table(result,"average_of_dataset.txt")
